０、仕様
・external storageの正確な仕様を調べる。

・secp256k1 について学ぶ。
・mdc = modification detection code
・mac = message authentication code
・pending transaction の意味は？

０、不具合

40万超えたあたりから、IndexedBlockStore の flush が200秒超え。
2016-01-11 05:31:26.839 INFO  <IndexBlockStore> Flushed block store in 220,596,452,738 nanos (12,396 blocks in 96,536,313 nanos; 12,396 indices in 45,246,830,610 nanos; Commit in 175,253,085,815 nanos. [sync-queue-000] IndexedBlockStore.scala:84


１、既存環境との完全同期
・CallTransactionの変更に追随する。
・Ping、Pong、Neighboursについて、UDPとTCPのポートを分ける。
・Active Peerについて考えなおす。

２、自前ノード間での動作＆トランザクション実行
・miningの具体的な方法を実装する。
・実データを見ながらのほうがいいかもしれない。

３、整備
ComponentFactory

・再起動するとエラー。
・gracefulな終了を実現する。
・expirationによるdiscardを実装する。（replay attack対策）
・アウトラインログを作る。
・refactorする。（init() や start() の整備。future化。）
・logging、refactor、comment。（不具合追跡用）
・ECKeyを実装し直す。（ECの仕様とシステムの仕様を両方よく検討する必要がある。）
・スレッドセイフティ

・多数のJARファイルは、ディスクリプタ数の面で非常に不利。
・nullを排除する。
・ImmutableBytes#toByteArray を排除する。

とにかく yellow paper を熟読すること。
ethashを学ぶと、mixhashがわかる。

git flowを入れる。

https://github.com/ethereum/tests を活用した自動テストの実行方法を考える。

BlockchainImplの精緻なテスト。
IndexedBlockStoreのテストを充実させる。
VMTest、VMCustomTest、VMComplexTest等々を充実させる。

StorageDictionary関連は、よく意味がわかっていないので後回しとする。
VM関連のデバッグ用出力（ProgramTrace等）。
RepositoryImplのデバッグ用出力。
TransactionExecutorのデバッグ用出力。
LpcHandlerのデバッグ用出力。
PeersPoolのデバッグ用出力。


依存先およびライセンスをまとめる。
楕円曲線暗号について調べる。

sbtによるleveldbのテストの問題？
