０、仕様
・secp256k1 について学ぶ。
・mdc = modification detection code
・mac = message authentication code

０、不具合

１、既存環境との完全同期
・CallTransactionの変更に追随する。
・Ping、Pong、Neighboursについて、UDPとTCPのポートを分ける。
・Active Peerについて考えなおす。

２、自前ノード間での動作＆トランザクション実行
・miningの具体的な方法を実装する。
・walletを実装する。
・実データを見ながらのほうがいいかもしれない。

３、整備
・フロントエンドを整備する。

・MessageCodecの方のECKeyはfalseで良いだろう。（64バイト）

・ContractDetailsCacheImplとか、どうにかならないのか。

・アウトラインログを作る。
・refactorする。（init() や start() の整備。future化。）
・logging、refactor、comment。（不具合追跡用）


・expirationによるdiscardを実装する。（replay attack対策）
・ECKeyを実装し直す。（ECの仕様とシステムの仕様を両方よく検討する必要がある。）
・スレッドセイフティ

・nullを排除する。
・ImmutableBytes#toByteArray を排除する。

とにかく yellow paper を熟読すること。
ethashを学ぶと、mixhashがわかる。

git flowを入れる。


BlockchainImplの精緻なテスト。
VM関連のデバッグ用出力（ProgramTrace等）。
RepositoryImplのデバッグ用出力。
TransactionExecutorのデバッグ用出力。
LpcHandlerのデバッグ用出力。
PeersPoolのデバッグ用出力。

依存先およびライセンスをまとめる。
