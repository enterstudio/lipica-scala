package org.lipicalabs.lipica.core.base

import org.junit.runner.RunWith
import org.lipicalabs.lipica.core.utils.ImmutableBytes
import org.specs2.mutable.Specification
import org.specs2.runner.JUnitRunner

/**
 * Created by IntelliJ IDEA.
 * 2015/11/18
 * YANAGISAWA, Kentaro
 */

@RunWith(classOf[JUnitRunner])
class BlockTest extends Specification {
	sequential

	"test (1)" should {
		"be right" in {
			val encoded = "f901f8f901f3a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a09178d0f23c965d81f0834a4c72c6253ce6830f4022b1359aaebfc1ecba442d4ea056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bfefd8808080a0000000000000000000000000000000000000000000000000000000000000000088000000000000002ac0c0"
			val expectedHash = "fd4af92a79c7fc2fd8bf0d342f2e832e1d4f485c85b9152d2039e03bc604fdca"
			val expectedStateRoot = "9178d0f23c965d81f0834a4c72c6253ce6830f4022b1359aaebfc1ecba442d4e"

			val block = Block.decode(ImmutableBytes.parseHexString(encoded))
			block.toString.nonEmpty mustEqual true
			block.hash.toHexString mustEqual expectedHash
			block.stateRoot.toHexString mustEqual expectedStateRoot
			block.encode.toHexString mustEqual encoded
		}
	}

	//https://github.com/ethereum/tests/blob/develop/BlockchainTests/bcForkUncle.json
	"simple case" should {
		"be right" in {
			val encoded = "f90261f901f9a09354621d3746a792238486dd92f324fe177e798ffab4a75ac4bf726bd6aa56fda01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948888f1f195afa192cfee860698584c030f4c9db1a0cb52de543653d86ccd13ba3ddf8b052525b04231c6884a4db3188a184681d878a05c9151c2413d1cd25c51ffb4ac38948acc1359bf08c6b49f283660e9bcf0f516a0e9244cf7503b79c03d3a099e07a80d2dbc77bb0b502d8a89d51ac0d68dd31313bfefd88252088455dc522e80a0dfad10d0715a6249fd0b5b329f98d0f47ad7532641edc487eead74bcc9ef663088eb6d6f709e656c22f862f86080018304cb2f94095e7baea6a6c7c4c2dfeb977efac326af552d870a801ba077c7cd36820c71821c1aed59de46e70e701c4a8dd89c9ba508ab722210f60da8a03f29825d40c7c3f7bff3ca69267e0f3fb74b2d18b8c2c4e3c135b5d3b06e288dc0"
			val block = Block.decode(ImmutableBytes.parseHexString(encoded))

			block.hash.toHexString mustEqual "6a6f1738c264cf6b2593cd5f898ef374f2c0e5c68355442d0db07c5e5af4cdd1"
			block.parentHash.toHexString mustEqual "9354621d3746a792238486dd92f324fe177e798ffab4a75ac4bf726bd6aa56fd"
			block.mixHash.toHexString mustEqual "dfad10d0715a6249fd0b5b329f98d0f47ad7532641edc487eead74bcc9ef6630"
			block.txTrieRoot.toHexString mustEqual "5c9151c2413d1cd25c51ffb4ac38948acc1359bf08c6b49f283660e9bcf0f516"
			block.receiptsRoot.toHexString mustEqual "e9244cf7503b79c03d3a099e07a80d2dbc77bb0b502d8a89d51ac0d68dd31313"
			block.unclesHash.toHexString mustEqual "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"

			block.nonce.toHexString mustEqual "eb6d6f709e656c22"
			block.blockNumber mustEqual 1
			block.coinbase.toHexString mustEqual "8888f1f195afa192cfee860698584c030f4c9db1"
			block.difficulty.toHexString mustEqual "020000"
			block.timestamp.toHexString mustEqual "55dc522e"
			block.manaLimit.toHexString mustEqual "2fefd8"
			block.manaUsed.toHexString mustEqual "5208"

			block.extraData.isEmpty mustEqual true
			block.blockHeader.logsBloom.toHexString mustEqual "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

			block.transactions.size mustEqual 1
			val tx = block.transactions.head
			tx.receiverAddress.toHexString mustEqual "095e7baea6a6c7c4c2dfeb977efac326af552d87"
			tx.nonce.toHexString mustEqual ""
			tx.data.isEmpty mustEqual true
			tx.manaLimit.toHexString mustEqual "04cb2f"
			tx.manaPrice.toHexString mustEqual "01"
			tx.value.toHexString mustEqual "0a"
			tx.signatureOption.get.r.toString(16) mustEqual "77c7cd36820c71821c1aed59de46e70e701c4a8dd89c9ba508ab722210f60da8"
			tx.signatureOption.get.s.toString(16) mustEqual "3f29825d40c7c3f7bff3ca69267e0f3fb74b2d18b8c2c4e3c135b5d3b06e288d"
			tx.signatureOption.get.v mustEqual 27
		}
	}

}
