package org.lipicalabs.lipica.core.validator

import org.junit.runner.RunWith
import org.lipicalabs.lipica.core.base.{BlockHeader, Block}
import org.lipicalabs.lipica.core.utils.{RBACCodec, ImmutableBytes}
import org.specs2.mutable.Specification
import org.specs2.runner.JUnitRunner

/**
 * Created by IntelliJ IDEA.
 * 2015/11/18
 * YANAGISAWA, Kentaro
 */

@RunWith(classOf[JUnitRunner])
class ProofOfWorkRuleTest extends Specification {
	sequential

	"test (1)" should {
		"be right" in {
			val encoded = "f9021af90215a0809870664d9a43cf1827aa515de6374e2fad1bf64290a9f261dd49c525d6a0efa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794f927a40c8b7f6e07c5af7fa2155b4864a4112b13a010c8ec4f62ecea600c616443bcf527d97e5b1c5bb4a9769c496d1bf32636c95da056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421ba1c28ae5e82bf958302472c808455c4e47b99476574682f76312e302e312f6c696e75782f676f312e342e32a0788ac534cb2f6a226a01535e29b11a96602d447aed972463b5cbcc7dd5d633f288e2ff1b6435006517c0c0"
			val block = Block.decode(ImmutableBytes.parseHexString(encoded))

			block.blockHeader.getProofOfWorkBoundary mustEqual ImmutableBytes.parseHexString("0000000000bd59a74a8619f14c3d793747f1989a29ed6c83a5a488bac185679b")
			block.blockHeader.calculateProofOfWorkValue mustEqual ImmutableBytes.parseHexString("000000000017f78925469f2f18fe7866ef6d3ed28d36fb013bc93d081e05809c")

			val validator = new BlockHeaderValidator(Seq(new ProofOfWorkRule, new ManaValueRule, new ExtraDataRule))
			validator.validate(block.blockHeader) mustEqual true
		}
	}

	//cases from https://github.com/ethereum/tests/blob/develop/PoWTests/ethash_tests.json
	"test (2)" should {
		"be right" in {
			val encoded = "f901f3a00000000000000000000000000000000000000000000000000000000000000000a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a09178d0f23c965d81f0834a4c72c6253ce6830f4022b1359aaebfc1ecba442d4ea056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bf4240808080a058f759ede17a706c93f13030328bcea40c1d1341fb26f2facd21ceb0dae57017884242424242424242"
			val header = BlockHeader.decode(RBACCodec.Decoder.decode(ImmutableBytes.parseHexString(encoded)).right.get)

			val pow = header.calculateProofOfWorkValue
			pow.toHexString mustEqual "dd47fd2d98db51078356852d7c4014e6a5d6c387c35f40e2875b74a256ed7906"
		}
	}

	"test (3)" should {
		"be right" in {
			val encoded = "f901f7a01bef91439a3e070a6586851c11e6fd79bbbea074b2b836727b8e75c7d4a6b698a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ea3cb5f94fa2ddd52ec6dd6eb75cf824f4058ca1a00c6e51346be0670ce63ac5f05324e27d20b180146269c5aab844d09a2b108c64a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421bfefd880845511ed2a80a0e55d02c555a7969361cf74a9ec6211d8c14e4517930a00442f171bdb1698d17588307692cf71b12f6d"
			val header = BlockHeader.decode(RBACCodec.Decoder.decode(ImmutableBytes.parseHexString(encoded)).right.get)

			val pow = header.calculateProofOfWorkValue
			pow.toHexString mustEqual "ab9b13423cface72cbec8424221651bc2e384ef0f7a560e038fc68c8d8684829"
		}
	}
}
